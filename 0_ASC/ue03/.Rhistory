demo()
demo()
graphics()
demo.graphics
demo()
graphics.prahics()
graphics.prahics
graphics.graphics
demo()
?
mean
?par
clear
?"if"
?tree
iris
head(iris)
names(iris)
summary(iris)
summary(iris)
str(iris)
install.packages("ggplot2")
library(ggplot2)
head(diamonds)
knitr::opts_chunk$set(echo = TRUE)
summary(cars, echo=TRUE)
plot(pressure)
mean(cars$speed)
mean(cars$speed)
mean(cars$speed)
mean(cars$speed)
plot(pressure)
plot(pressure)
plot(pressure)
knitr::opts_chunk$set(echo = TRUE)
summary(cars, echo=TRUE)
plot(pressure)
plot(pressure)
plot(pressure)
plot(pressure)
plot(pressure)
plot(pressure)
plot(pressure)
plot(pressure)
plot(cars$speed)
plot(cars$speed as speed)
plot(cars$speed)
?plot
plot(cars$speed ylab="speed")
plot(cars$speed, ylab="speed")
plot(cars$speed, ylab="speed", xlab="mp/h")
plot(cars$speed, ylab="speed", xlab="mp/h", main="Measured speed")
# stat Verteilungen
rnorm(100)
plot(rnorm(100))
plot(runif(100))
dnorm(0)
dnorm(1)
x <- sample(1:100, 100, replace=T)
x <- sample(1:100, 100, replace=T)
unique(x)
duplicated(x)
length(unique)
length(unique(x))
sample(colors(), 3)
plot(sample(colors(), 3))
sample(LETTERS, 4)
?par
?plot
plot(dnorm, xlim=c(-4, 4), ylim=c(0,1))
plot(dnorm, xlim=c(-4, 4), ylim=c(0,1), ylab="density function")
rt(1, 1)
rt(1, 2)
rt(5, 2)
rt(100, 2)
x <- seq(-4, 4, length=100)
dnorm(x)
nx <- dnorm(x)
plot(nx)
plot(x, nx, type="1")
plot(x, nx, type="l")
lines(x, dt(x,2), col="burlywood")
lines(x, dt(x,5), col="green")
lines(x, dt(x,30), col="burlywood")
lines(x, dt(x,30), col="pink")
lines(x, dt(x,30), col="red")
dnorm(1)
dt(1, df=1)
dt(1, df=30)
rbinom(100, 10, 0.5)
lines(x, binom, col="blue")
lines(x, rbinom, col="blue")
lines(x, rbinom(100), col="blue")
lines(x, rbinom(100, 10), col="blue")
lines(x, rbinom(100, 10, 0.2), col="blue")
binom <- rbinom(100, 10, 0.5)
table(binom)
prop.table(table(binom))
plot(cars$speed, cars$dist, ylab="speed", xlab="mp/h", main="Measured speed")
plot(cars$speed, cars$dist, ylab="speed", xlab="mp/h", main="Measured speed")
plot(cars$speed, cars$dist, ylab="speed", xlab="distance", main="Measured speed")
plot(cars$speed, cars$dist, ylab="speed", xlab="distance")
mean(cars$speed)
kable(summary(cars))
kable(summary(cars))
kable(summary(cars))
plot(cars$speed, cars$dist, ylab="distance", xlab="speed")
kable(summary(cars))
kable(table(summary(cars)))
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
install.packages("knitr")
kable
kable(summary(iris))
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
kable(table(summary(cars)))
kable(summary(cars))
kable(summary(cars))
getwd()
setwd("/home/paul/git/fhhgb_ws19/0_ASC/ue03")
as.roman(2019)
M_DNA(dimnames(c("G", "A", "T", "C"), ncol=4, nrow=4)
M_DNA = dimnames(c("G", "A", "T", "C"), ncol=4, nrow=4)
M_DNA = matrix(dimnames(c("G", "A", "T", "C"), ncol=4, nrow=4))
M_DNA = matrix(dimnames(c("G", "A", "T", "C")), ncol=4, nrow=4))
M_DNA = matrix(dimnames(c("G", "A", "T", "C")), ncol=4, nrow=4)
M_DNA = matrix(dimnames(c("G", "A", "T", "C")), ncol=4, nrow=4, data=0)
M_DNA = matrix(dimnames(c("G", "A", "T", "C")), ncol=4, nrow=4, data=c(0))
M_DNA = matrix(dimnames(c("G", "A", "T", "C")), ncol=4, nrow=4, data=c(0:0))
M_DNA = matrix(dimnames(c("G", "A", "T", "C")), ncol=4, nrow=4, 0)
M_DNA = matrix(0, dimnames(c("G", "A", "T", "C")), ncol=4, nrow=4)
M_DNA = matrix(0:0, dimnames(c("G", "A", "T", "C")), 4)
M_DNA = matrix(0:0, 4, dimnames(c("G", "A", "T", "C")), )
M_DNA = matrix(0:0, 4, dimnames(c("G", "A", "T", "C")))
matrix(0:0, 4)
matrix(0:0, 4, 4)
M_DNA = matrix(0:0, 4, 4, dimnames(c("G", "A", "T", "C")))
names = c("G", "A", "T", "C")
row.names(M_DNA, names)
row.names(M_DNA) <- names
M_DNA = matrix(0:0, 4, 4)
row.names(M_DNA) <- names
column.names(M_DNA) <- names
col.names(M_DNA) <- names
colnames(M_DNA) <- names
View(M_DNA)
M_DNA[1,]
M_DNA[1,] = 3
M_DNA[1,] = c(0, 1, 3, 3)
M_DNA[2,3] = M_DNA[2,4] = 3
M_DNA[3,1] = 1;
M_DNA[3,1] = 0
M_DNA + t(M_DNA)
names = c("G", "A", "T", "C")
M_DNA = matrix(0:0, 4, 4)
row.names(M_DNA) <- names
colnames(M_DNA) <- names
M_DNA[2,3] = M_DNA[2,4] = 3
M_DNA[3,3] = M_DNA[1,2] = 0
M_DNA + t(M_DNA)
M_DNA = matrix(0:0, 4, 4)
names = c("G", "A", "T", "C")
row.names(M_DNA) <- names
colnames(M_DNA) <- names
M_DNA[2,3] = M_DNA[2,4] = 3
M_DNA[1:2,3:4] = 3
M_DNA[3,3] = M_DNA[1,2] = 0
M_DNA + t(M_DNA)
M_DNA[3,3] = M_DNA[1,2] = 1
M_DNA + t(M_DNA)
names = c("G", "A", "T", "C")
M_DNA = matrix(0:0, 4, 4)
row.names(M_DNA) <- names
colnames(M_DNA) <- names
M_DNA[1:2,3:4] = 3
M_DNA[3,3] = M_DNA[1,2] = 1
M_DNA + t(M_DNA)
names = c("G", "A", "T", "C")
M_DNA = matrix(0:0, 4, 4)
row.names(M_DNA) <- names
colnames(M_DNA) <- names
M_DNA[1:2,3:4] = 3
M_DNA[3,3] = M_DNA[1,2] = 1
M_DNA + t(M_DNA)
names = c("G", "A", "T", "C")
M_DNA = matrix(0:0, 4, 4)
row.names(M_DNA) <- names
colnames(M_DNA) <- names
M_DNA[1:2,3:4] = 3
M_DNA[3,4] = M_DNA[1,2] = 1
M_DNA + t(M_DNA)
L1 <- list(1:6,
"a",
c(T,F,TRUE,F),
c(2.3,4.3,5.6),
matrix(1:6, 2))
L1([[1]])
str(L1)
L1[[1]]
L1[[5]][1,2]
L1[[c(4,2)]]
L2 <- list(Info="R-Kurs", Liste1=L1)
L2$Info
L2$Liste1
L2$Liste1[[5]][1,2]
iris
head(iris)
class(iris)
str(iris)
summary(iris)
edit(iris)
edit(iris)
read.table(header=T, text="
a b
1 2
3 4
")
data <- data.frame(var1=c(1:5), var2 = c(10:14))
colnames(data) <- c("VarA", "VarB")
data[,"VarA"]
data[["VarA"]]
data$VarA
rbind(data, c(10,17))
data$VarA
data <- rbind(data, c(10,17))
data
frame <- data.frame(id=integer(3),
max1=numeric(3),
min1=numeric(3))
frame <- data.frame(matrix(NA, nrow=10, ncol=5))
data.frame(matrix(dimnames=list(NA, c("a", "sex", "cm", "kg")), data=c(21, "m", 181, 69)))
data.frame(matrix(dimnames=list(c("a", "sex", "cm", "kg")), data=c(21, "m", 181, 69)))
data.frame(c("a", "sex", "cm", "kg"),
c(21, "m", 181, 69))
data.frame("a", "sex", "cm", "kg",
c(21, "m", 181, 69))
data.frame("a", "sex", "cm", "kg",
c(21, "m", 181, 69))
data.frame(c("a", "sex", "cm", "kg"),
c(21, "m", 181, 69))
data.frame(c("a", "sex", "cm", "kg"))
data.frame("a", "sex", "cm", "kg")
matrix(c(21, "m", 181, 69))
matrix(21, "m", 181, 69)
matrix(c(21, "m", 181, 69))
matrix(d(c(21, "m", 181, 69))
matrix(d(c(21, "m", 181, 69)))
data.frame(a=c(21,35,829,2),
sex=factor(c("m","w","m","e"))
cm=c(181,173,171,166)
kg=c(69,58,75,69))
data.frame(a=c(21,35,829,2),
sex=factor(c("m","w","m","e")),
cm=c(181,173,171,166),
kg=c(69,58,75,69))
pers.dat <- data.frame(a=c(21,35,829,2),
sex=factor(c("m","w","m","e")),
cm=c(181,173,171,166),
kg=c(69,58,75,69))
str(pers.dat)
class(iris$Species)
class(iris[["Species"]])
str(iris)
iris[1,"Species"]
iris[1,2]
str(iris)
iris[iris$Species == "setosa",]
pers.dat[pers.dat$sex == "w",]
iris$Species == "setosa"
any(iris$Sepal.Width < 2.4)
all(iris$Sepal.Width < 2.4)
which(iris$Sepal.Width < 2.4)
iris[which(iris$Sepal.Width < 2.4)]
iris[which(iris$Sepal.Width < 2.4),]
which.max(iris$Sepal.Width)
subset(iris, Species="setosa")
subset(iris, Species=-"setosa")
subset(iris, Species=="setosa")
subset(iris, Species %in% c("setosa", "virginica"))
subset(iris, Species %in% c("setosa", "virginica") &
Sepal.Width < 2.4)
LSpecies <- split(iris, iris$Species)
LSpecies
str(LSpecies)
LSpecies[1]
LSpecies[2]
class(LSpecies[[1]])
df_a <- as.data.frame(iris[which(iris$Sepal.Width<2.4)])
df_a <- as.data.frame(iris[which(iris$Sepal.Width<2.4),])
df_b <- iris[which(iris$Petal.Width==1),]
nrow(df_a)
nrow(df_b)
df_c <- merge(df_a, df_b)
nrow(df_c)
df_c <- append(df_a, df_b)
nrow(df_c)
df_c <- merge(df_a, df_b)
nrow(df_c)
df_c <- merge(df_a, df_b, by = c("Sepal.Width", "Sepal.Length"))
nrow(df_c)
df_c <- merge(df_a, df_b, all=T)
merge(df_a, df_b, all.x = F)
merge(df_a, df_b, all.y = F)
merge(df_a, df_b, all.y = T)
merge(df_a, df_b, by = c("Sepal.Width"), all.y = T)
a1a = c(4:20)
a1a
a2b = c(20:4)
a1b = c(20:4)
a1c = c(4:20:4)
a1c = c(4:20, 19:4)
a1c
a1e = c(temp * 10)
# a1d
temp <- c(5,3,9)
a1e = c(temp * 10)
a1e
a1e = c(temp)
a1e = rep(c(temp), each=10)
# a1d
temp <- c(5,3,9)
a1e = rep(c(temp), each=10)
a1e
a1e = rep(c(temp), times=10)
a1e = rep(c(temp), times=10)
a1f <- rep(c(temp), times=11)
a1f <- rep(c(temp), times=10, length=31)
a1f
a1e <- rep(c(temp), times=10)
a1e
a1f
a1f <- rep(c(temp), times=11, length=31)
a1f
a1g <- rep(temp, each=10)
a1g
a1g <- c(rep(5, times=5), rep(3, times=3), rep(9, times=9))
a1g
a1h <- c(3.0:6.0)
a1h <- seq(3.0,0.5,6.0)
a1h <- seq(3.0,6.0,0.5)
a1h
a1h_result = c(exp(a1h) * sin(a1h))
a1h_result <- c(exp(a1h) * sin(a1h))
a1h_result
a1h_result <- c(exp(x) * sin(x))
x <- seq(3.0,6.0,0.5)
a1h_result <- c(exp(x) * sin(x))
x1 <- seq(3, 34, 3)
x <- seq(3, 34, 3)
a2a <- c(2^x * 0.1^(x-2))
a2a
x
a2b <- c(x^2 + 5*i^3)
i <- c(10:25)
a2b <- c(i^2 + 5*i^3)
a2c <- c((2^i/i^3) + (i^2/3^i))
set.seed(1)
sample(1:100,100,replace=T)
xVec <- sample(1:100,100,replace=T)
x <- c(1:99)
sumX <- sum(c(exp(-xVec[i + 1])/xVec[i] + 2))
sumX
set.seed(1)
xVec <- sample(1:100,100,replace=T)
i <- c(1:99)
sumX <- sum(c(exp(-xVec[i + 1])/xVec[i] + 2))
sumX
set.seed(1)
xVec <- sample(1:100,100,replace=T)
i <- c(1:99)
sumX <- sum(c(exp(-xVec[i + 1])/xVec[i] + 2))
sumX
set.seed(1)
xVec <- sample(1:100,100,replace=T)
i <- c(1:99)
sumX <- sum(c(exp(-xVec[i + 1])/xVec[i] + 2))
sumX
set.seed(1)
xVec <- sample(1:100,100,replace=T)
i <- c(1:99)
sumX <- sum(c(exp(-xVec[i + 1])/xVec[i] + 2))
sumX
set.seed(1)
xVec <- sample(1:100,100,replace=T)
i <- c(1:99)
sumX <- sum(c(exp(-xVec[i + 1])/xVec[i] + 2))
sumX
set.seed(1)
xVec <- sample(1:100,100,replace=T)
i <- c(1:99)
sumX <- sum(c(exp(-xVec[i + 1])/xVec[i] + 2))
sumX
set.seed(1)
xVec <- sample(1:100,100,replace=T)
i <- c(1:99)
sumX <- sum(c(exp(-xVec[i + 1])/xVec[i] + 2))
sumX
xVec[xVec > 90]
which(xVec > 90)
length(which(xVec > max(xVex) - 20))
length(which(xVec > max(xVec) - 20))
xVec[seq(1, 100, 3)]
xVec
xVec[seq(1, 100, 3)]
a3a <- matrix(3)
a3a
a3a <- matrix(3:3)
a3a
a3a <- matrix(ncol = 3, nrow = 3)
a3a[,3] = c(10, 5, 15)
a3a[,1] = c(4, 12, 16)
a3a[,2] = c(10, 20, 10)
a3a
colnames(a3a) = c("Abt1", "Abt2", "Abt3")
a3a
a3a[,4] = c(16, 63, 9)
a3a <- rbind(a3a, c(16, 63, 9))
a3a
a3a <- matrix(ncol = 3)
a3a[,1] = c(4, 12, 16)
a3a[,2] = c(10, 20, 10)
a3a[,3] = c(10, 5, 15)
colnames(a3a) = c("Abt1", "Abt2", "Abt3")
a3a <- cbind(a3a, c(16, 63, 9))
a3a <- matrix(ncol = 3)
a3a[,1] = c(4, 12, 16)
a3a[,2] = c(10, 20, 10)
a3a[,3] = c(10, 5, 15)
a3a <- matrix(ncol = 3)
a3a[,1] = c(4, 12, 16)
a3a[,2] = c(10, 20, 10)
a3a[,3] = c(10, 5, 15)
a3a[,1] = c(4, 12, 16)
a3a <- matrix(ncol = 3)
a3a[,1] = c(4, 12, 16)
a3a <- matrix(ncol = 3)
a3a <- matrix(ncol = 3, nrow = 3)
a3a[,1] = c(4, 12, 16)
a3a[,2] = c(10, 20, 10)
a3a[,3] = c(10, 5, 15)
colnames(a3a) = c("Abt1", "Abt2", "Abt3")
a3a <- cbind(a3a, c(16, 63, 9))
a3a
colnames(a3a) = rbind(colnames(a3a), "Markt")
colnames(a3a) = cbind(colnames(a3a), "Markt")
a3b <- cbind(a3a, c(16, 63, 9))
a3a <- matrix(ncol = 3, nrow = 3)
a3a[,1] = c(4, 12, 16)
a3a[,2] = c(10, 20, 10)
a3a[,3] = c(10, 5, 15)
colnames(a3a) <- c("Abt1", "Abt2", "Abt3")
a3b <- cbind(a3a, c(16, 63, 9))
a3c <- colSums(a3b)
a3c
a3c <- rowSums(a3b)
a3c
a3d = a3c^-1 %*% diag(3) %*% a3b
a3d
a3e <- diag(3) - a3d
